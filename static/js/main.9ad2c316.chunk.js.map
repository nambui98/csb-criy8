{"version":3,"sources":["ScreenComponent.js","useScreen.js","App.js","useCounter.js","index.js"],"names":["Screen","sreenSize","useState","screenSize","setScreenSize","useEffect","checkScreenSize","window","addEventListener","removeEventListener","innerWidth","useScreen","App","initialValue","value","setValue","useCounter","counter","increment","decrement","className","onClick","rootElement","document","getElementById","ReactDOM","render"],"mappings":"0KAEe,SAASA,IACtB,IAAMC,ECDO,WAAsB,IAAD,EACEC,qBADF,mBAC3BC,EAD2B,KACfC,EADe,KAElCC,qBAAU,WAGR,OAFAC,IACAC,OAAOC,iBAAiB,SAAUF,GAC3B,WACLC,OAAOE,oBAAoB,aAE5B,IACH,IAAMH,EAAkB,WACtB,OAAIC,OAAOG,WAAa,IAAYN,EAAc,SAC9CG,OAAOG,WAAa,KAAOH,OAAOG,WAAa,IAC1CN,EAAc,UACnBG,OAAOG,WAAa,IAAYN,EAAc,cAAlD,GAEF,OAAOD,EDdWQ,GAClB,OAAO,yCAAYV,KECN,SAASW,IAAO,IAAD,ECJf,SAAoBC,GAAe,IAAD,EACrBX,mBAASW,GADY,mBACxCC,EADwC,KACjCC,EADiC,KAQ/C,MAAO,CAACD,EANU,WAChB,OAAOC,EAASD,EAAQ,IAER,WAChB,OAAOC,EAASD,EAAQ,KDDcE,CAAW,GADvB,mBACrBC,EADqB,KACZC,EADY,KACDC,EADC,KAG5B,OACE,sBAAKC,UAAU,MAAf,UACE,uCACA,wBAAQC,QAASH,EAAjB,uBACA,wBAAQG,QAASF,EAAjB,uBACA,6BAAKF,IACL,cAACjB,EAAD,OETN,IAAMsB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACd,EAAD,MAEFU,I","file":"static/js/main.9ad2c316.chunk.js","sourcesContent":["import react from \"react\";\r\nimport useScreen from \"./useScreen\";\r\nexport default function Screen() {\r\n  const sreenSize = useScreen();\r\n  return <h1>Screen {sreenSize}</h1>;\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useScreen() {\r\n  const [screenSize, setScreenSize] = useState();\r\n  useEffect(() => {\r\n    checkScreenSize();\r\n    window.addEventListener(\"resize\", checkScreenSize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\");\r\n    };\r\n  }, []);\r\n  const checkScreenSize = () => {\r\n    if (window.innerWidth > 992) return setScreenSize(\"Large\");\r\n    if (window.innerWidth < 992 && window.innerWidth > 600)\r\n      return setScreenSize(\"Medium\");\r\n    if (window.innerWidth < 600) return setScreenSize(\"small\");\r\n  };\r\n  return screenSize;\r\n}\r\n","import \"./styles.css\";\nimport { useState } from \"react\";\nimport useCounter from \"./useCounter\";\n\nimport Screen from \"./ScreenComponent\";\nexport default function App() {\n  const [counter, increment, decrement] = useCounter(1);\n\n  return (\n    <div className=\"App\">\n      <h1>Hello</h1>\n      <button onClick={increment}>Increment</button>\n      <button onClick={decrement}>Decrement</button>\n      <h2>{counter}</h2>\n      <Screen />\n    </div>\n  );\n}\n","import { useState } from \"react\";\r\nexport default function useCounter(initialValue) {\r\n  const [value, setValue] = useState(initialValue);\r\n  const increment = () => {\r\n    return setValue(value + 1);\r\n  };\r\n  const decrement = () => {\r\n    return setValue(value - 1);\r\n  };\r\n  return [value, increment, decrement];\r\n}\r\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}